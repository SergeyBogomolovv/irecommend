# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AccessTokenResponse {
  access_token: String!
}

type MessageResponse {
  message: String!
}

type Contact {
  id: ID!
  url: String!
  type: Contacts!
}

enum Contacts {
  TELEGRAM
  INSTAGRAM
  DISCORD
  VK
}

type Profile {
  id: ID!
  name: String!
  about: String
  logo: String
  contacts: [Contact!]!
}

type FriendRequest {
  id: ID!
  sender: User!
  senderId: String!
  recipient: User!
  recipientId: String!
  created_at: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Image {
  id: ID!
  url: String!
}

type Comment {
  id: ID!
  content: String!
  recommendationId: String!
  author: User!
  created_at: DateTime!
}

type Recommendation {
  id: ID!
  title: String!
  description: String!
  favoritesCount: Int!
  type: RecommendationType!
  link: String
  images: [Image!]!
  comments: [Comment!]!
  author: User!
  created_at: DateTime!
}

enum RecommendationType {
  MOVIE
  MUSIC
  ANIME
  BOOK
  HOBBY
  TODO
  SERIES
}

type User {
  id: ID!
  created_at: DateTime!
  email: String
  password: String
  verified: Boolean!
  profile: Profile!
  profileId: String!
  friends: [User!]!
  sendedFriendRequests: [FriendRequest!]!
  receivedFriendRequests: [FriendRequest!]!
  recommendations: [Recommendation!]!
  favorites: [Recommendation!]!
}

type VerifyResponse {
  message: String!
  email: String!
}

type PaginatedRecommendationResponse {
  recommendations: [Recommendation!]!
  pagesCount: Int!
}

type Query {
  refresh: AccessTokenResponse!
  one_user(id: String!): User!
  search_users_by_name(name: String!, page: Int, limit: Int): [User!]!
  profile: User!
  search_recommendations(query: String!, page: Int): [Recommendation!]!
  last_recommendations(type: RecommendationType, page: Int): PaginatedRecommendationResponse!
  get_recommendation_by_id(id: String!): Recommendation!
}

type Mutation {
  login(loginInput: LoginInput!): AccessTokenResponse!
  register(registerInput: RegisterInput!): VerifyResponse!
  verify_account(verifyAccountInput: VerifyAccountInput!): AccessTokenResponse!
  password_reset_request(email: String!): VerifyResponse!
  password_reset(passwordResetInput: PasswordResetInput!): MessageResponse!
  logout: MessageResponse!
  update_profile(payload: UpdateProfileDto!, image: Upload): User!
  add_contact(payload: AddContactDto!): MessageResponse!
  remove_contact(contactId: String!): MessageResponse!
  delete_account: MessageResponse!
  send_friend_request(friendId: String!): FriendRequest!
  decline_friend_request(requestId: String!): MessageResponse!
  accept_friend_request(requestId: String!): MessageResponse!
  delete_friend(friendId: String!): MessageResponse!
  create_recommendation(payload: CreateRecommendationInput!, images: [Upload!]): MessageResponse!
  update_recommendation(id: String!, payload: UpdateRecommendationInput!): MessageResponse!
  delete_image_from_recommendation(imageId: String!): MessageResponse!
  add_images_to_recommendation(id: String!, images: [Upload!]!): MessageResponse!
  delete_recommendation(id: String!): MessageResponse!
  add_to_favorites(id: String!): MessageResponse!
  remove_from_favorites(id: String!): MessageResponse!
  create_comment(content: String!, recommendationId: String!): Comment!
  edit_comment(content: String!, id: String!): MessageResponse!
  delete_comment(id: String!): MessageResponse!
}

input LoginInput {
  email: String!
  password: String!
}

input RegisterInput {
  name: String!
  email: String!
  password: String!
}

input VerifyAccountInput {
  email: String!
  code: String!
}

input PasswordResetInput {
  email: String!
  code: String!
  newPassword: String!
}

input UpdateProfileDto {
  name: String
  about: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input AddContactDto {
  url: String!
  type: Contacts!
}

input CreateRecommendationInput {
  title: String!
  description: String!
  type: RecommendationType!
  link: String
}

input UpdateRecommendationInput {
  title: String
  description: String
  link: String
}